{"version":3,"sources":["logo.svg","components/start/start.jsx","components/nav/nav.jsx","components/employees/employees.jsx","components/create/create.jsx","components/show/show.jsx","components/edit/edit.jsx","components/main.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Start","className","type","href","React","Component","Main","src","logo","alt","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Employees","state","employees","alert","axios","get","then","response","data","console","log","setState","catch","err","value","post","name","detail","window","scrollTo","deletedEmployee","firstname","lastname","setTimeout","location","reload","bind","this","map","x","indexOf","key","role","onClick","table","length","scope","collapseContent","deleteEmployee","Create","addEmployee","phone","email","image","work_under_id","work_under_name","redirectID","redirect","e","target","selectedOptions","text","includes","addedEmployee","to","renderRedirect","htmlFor","placeholder","required","onChange","event","getFirstName","getLastName","getPhone","getEmail","getPicture","getBoss","selected","disabled","Show","selectedEmployee","bosses","requestID","props","match","params","getBosses","param","push","works_under","Edit","foundSubordinate","editEmployee","editImage","editedEmployee","array","i","splice","findWorkForWho","employee","findSame","getImage","backToShow","exact","path","component","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a673b977.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './start.css';\n\nclass Start extends React.Component {\n\n  render(){\n    return (\n      <div>\n        <div className=\"showcase\">\n          <button type=\"button\" className=\"button\"> <a href=\"/employees\">Welcome</a> </button>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default Start;","import React from 'react';\nimport logo from \"../../logo.svg\"\nimport './nav.css';\n\nconst Main = ()=>(\n  <main>\n\n    <nav className=\"navbar navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"/employees\">Employee System<img src={logo} className=\"App-logo\" alt=\"logo\" /></a>\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"navbar-nav mr-auto\">\n\n        </ul>\n        <span className=\"navbar-text\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/employees\">All Employees</a>\n            </li>\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"/create\">Create New Employee</a>\n            </li>\n          </ul>\n        </span>\n      </div>\n    </nav>\n\n  </main>\n\n)\n\nexport default Main;","import React from 'react';\nimport axios from 'axios';\nimport './employees.css';\nimport Nav from '../nav/nav';\n\n\nclass Employees extends React.Component {\n  constructor(){\n      super();\n      this.state = {\n          employees: [],\n          alert: \"\"\n      };\n  };\n\n  componentDidMount(){\n    // fetch('/api/employees')\n    //   .then(res => res.json())\n    //   .then(employees => this.setState({ employees }));\n\n\n    //Get selected all employees data and set to state\n    //---------------------------------------------\n    axios.get(\"/api/employees\")\n      .then(response =>{\n        let employees = response.data.employees;\n        console.log({employees});\n        this.setState({ employees });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteEmployee(value){\n    let id = \"\" + value\n    axios.post('/api/delete/', {\n        id\n      })\n      .then(response => {\n        // If editing is unsuccessful, alert user\n        if(response.data.name === \"error\"){\n          console.log(response.data.detail  );\n          this.setState({ alert: `Employee deletion unsuccessful` });\n          window.scrollTo(0,0);\n        } else {\n        // If editing is successful, alert user and refresh page after 2 seconds\n          let deletedEmployee = response.data.deletedEmployee;\n          this.setState({ alert: `Employee ${deletedEmployee.firstname} ${deletedEmployee.lastname} has been deleted` });\n          setTimeout(function() {window.location.reload();}.bind(this),1500);\n        };\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n\n  render(){\n\n\n    // Render all employees onto the table\n    //---------------------------------------------\n    let employees = this.state.employees.map(x =>{\n                      let id = this.state.employees.indexOf(x) + 1;\n                      return  <tr className=\"table-data\" key={id}>\n                                <td>{id}</td>\n                                <td>{x.firstname} {x.lastname}</td>\n                                <td> <a href={`/show/${x.id}`}>Show</a> <span className=\"divider\">|</span> <a href={`/edit/${x.id}`}>Edit</a> <span className=\"divider\">|</span>  <a data-toggle=\"collapse\" href={\"#collapseExample\" + x.id} role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\" onClick={()=> window.scrollTo(0,0)}> Delete </a> </td>\n                              </tr>\n                    });\n    //---------------------------------------------\n\n\n    // If no employees at all, render message instead\n    //---------------------------------------------\n    let table = <p className=\"text-center mt-5 mb-5\">You do not have any employees yet, let's create some!</p>\n    if(this.state.employees.length > 0){\n        table = <table className=\"table\">\n                  <thead className=\"thead-dark\">\n                    <tr>\n                      <th scope=\"col\">#</th>\n                      <th scope=\"col\">Name</th>\n                      <th scope=\"col\"></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {employees}\n                  </tbody>\n                </table>\n    }\n\n    //---------------------------------------------\n\n\n    // Render all bootstrap collapse item\n    //---------------------------------------------\n    let collapseContent = this.state.employees.map(x =>{\n      return  <div className=\"collapse\" key={x.id} id={\"collapseExample\" + x.id}>\n                <div className=\"card card-body\">\n                  <div className=\"text-right\">\n                    <a className=\"btn btn-sm btn-secondary\" data-toggle=\"collapse\" href={\"#collapseExample\" + x.id} role=\"button\" aria-expanded=\"false\" aria-controls=\"collapseExample\"> X </a>\n                  </div>\n\n                  Are you sure you want to delete {x.firstname} {x.lastname} ?\n                  <br/>\n                  This employee will permanently be deleted from the database\n                  <br/>\n\n                  <div className=\"mt-5\">\n                    <button className=\"btn btn-outline-danger\" onClick={()=> this.deleteEmployee(x.id)}>Yes delete permanently</button>\n                  </div>\n                </div>\n              </div>\n    });\n    //---------------------------------------------\n\n\n    // Show alert then remove alert after 5 seconds\n    //---------------------------------------------\n    let alert = null;\n    if(this.state.alert){\n      alert = <div className=\"alert alert-danger text-center\" role=\"alert\">\n                {this.state.alert}\n              </div>\n      setTimeout(function() {\n        this.setState({ alert: \"\" });\n      }.bind(this),5000);\n    }\n    //---------------------------------------------\n\n\n\n    return (\n      <div>\n\n          <Nav/>\n          {alert}\n          {collapseContent}\n\n          <h1 className=\"title\">All Employees</h1>\n\n          {table}\n\n          <div className=\"buttonDiv\"><button className=\"button2\"> <a href=\"/create\">Create Employee</a> </button></div>\n\n      </div>\n    );\n  };\n};\n\nexport default Employees;","import React from 'react';\nimport axios from 'axios';\nimport './create.css';\nimport Nav from '../nav/nav';\nimport { Redirect } from 'react-router'\n\nclass Create extends React.Component {\n\n  constructor(){\n      super();\n      this.state = {\n          employees: [],\n          addEmployee: {\n            firstname: \"\",\n            lastname: \"\",\n            phone: \"\",\n            email: \"\",\n            image: \"\",\n            work_under_id: \"\",\n            work_under_name: \"\",\n          },\n          redirectID: \"\",\n          redirect: false,\n          alert: \"\"\n      };\n  };\n\n  componentDidMount(){\n\n    // Get employees data for selection options later\n    //---------------------------------------------\n    axios.get(\"/api/employees\")\n      .then(response =>{\n        let employees = response.data.employees;\n        console.log({employees});\n        this.setState({ employees });\n      })\n      .catch(err => console.log(err));\n  }\n\n\n  //Setting all user inputs into state\n  //---------------------------------------------\n  getFirstName(e){\n    let addEmployee = this.state.addEmployee;\n    addEmployee.firstname = e.target.value;\n    this.setState({ addEmployee });\n    console.log(this.state.addEmployee);\n  }\n\n  getLastName(e){\n    let addEmployee = this.state.addEmployee;\n    addEmployee.lastname = e.target.value;\n    this.setState({ addEmployee });\n    console.log(this.state.addEmployee);\n  }\n\n  getPhone(e){\n    let addEmployee = this.state.addEmployee;\n    addEmployee.phone = e.target.value;\n    this.setState({ addEmployee });\n    console.log(this.state.addEmployee);\n  }\n\n  getEmail(e){\n    let addEmployee = this.state.addEmployee;\n    addEmployee.email = e.target.value;\n    this.setState({ addEmployee });\n    console.log(this.state.addEmployee);\n  }\n\n  getPicture(e){\n    let addEmployee = this.state.addEmployee;\n    addEmployee.image = e.target.value;\n    this.setState({ addEmployee });\n    console.log(this.state.addEmployee);\n  }\n\n  getBoss(e){\n    let addEmployee = this.state.addEmployee;\n    addEmployee.work_under_id = e.target.value;\n    addEmployee.work_under_name = e.target.selectedOptions[0].text;\n    this.setState({ addEmployee });\n    console.log(this.state.addEmployee);\n  }\n//---------------------------------------------\n\n\n  // Adding employee into database\n  //---------------------------------------------\n  addEmployee(){\n\n    let addEmployee = this.state.addEmployee;\n\n    // User input validation\n    if(addEmployee.firstname && addEmployee.lastname && addEmployee.phone && addEmployee.email){\n      if(addEmployee.email.includes(\"@\") && addEmployee.email.indexOf(\"@\") !== (addEmployee.email.length - 1)){\n        axios.post('/api/addemployee/', {\n            addEmployee\n          })\n          .then(response => {\n            // If adding is unsuccessful, redirect user\n            if(response.data.name === \"error\"){\n              console.log(response.data.detail  );\n              this.setState({ alert: `Email: ${this.state.addEmployee.email} already exists` });\n              window.scrollTo(0,0);\n            } else {\n            // If adding is successful, redirect user\n              let id = response.data.addedEmployee[0].id;\n              this.setState({ redirectID: id });\n              this.setState({ redirect: true });\n            };\n\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      } else {\n        this.setState({ alert: `Please fill in a valid email` });\n        window.scrollTo(0,0);\n      }\n    } else {\n      this.setState({ alert: `Please fill in all the mandatory details` });\n      window.scrollTo(0,0);\n    }\n\n  }\n  //---------------------------------------------\n\n\n  // Code for redirecting after user added to database\n  //---------------------------------------------\n  renderRedirect(){\n    let id = \"\" + this.state.redirectID;\n    if (this.state.redirect && this.state.redirectID) {\n      return <Redirect to={\"/show/\" + id} />\n    };\n  }\n  //---------------------------------------------\n\n\n  render(){\n\n    // Plot employees on the html\n    let employees = this.state.employees.map(x =>{\n\n                      return  <option value={x.id} >{x.firstname} {x.lastname}</option>\n                    })\n\n\n    // Show alert then remove alert after 5 seconds\n    let alert = null;\n    if(this.state.alert){\n      alert = <div className=\"alert alert-danger text-center\" role=\"alert\">\n                {this.state.alert}\n              </div>\n      setTimeout(function() {\n        this.setState({ alert: \"\" });\n      }.bind(this),5000);\n    }\n\n\n    return (\n      <div>\n        <Nav />\n        {alert}\n        {this.renderRedirect()}\n        <div className=\"container\">\n          <h1 className=\"title\">Create Employee Here</h1>\n          <form className=\"mb-5\">\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput1\">First Name *</label>\n              <input name=\"firstName\" type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"John\" required onChange={(event) => this.getFirstName(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput2\">Last Name *</label>\n              <input name=\"lastName\" type=\"text\" className=\"form-control\" id=\"exampleFormControlInput2\" placeholder=\"Smith\" required onChange={(event) => this.getLastName(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput3\">Phone Number *<small id=\"emailHelp\" className=\"form-text text-muted\">(Up to 15 characters)</small></label>\n              <input name=\"phone\" type=\"text\" className=\"form-control\" id=\"exampleFormControlInput3\" placeholder=\"111-222-333\" required onChange={(event) => this.getPhone(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput4\">Email Address *</label>\n              <input name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleFormControlInput4\" placeholder=\"someone@email.com\" required onChange={(event) => this.getEmail(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput5\">Profile Picture</label>\n              <input name=\"image\" type=\"text\" className=\"form-control\" id=\"exampleFormControlInput5\" placeholder=\"Place link here\" onChange={(event) => this.getPicture(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlSelect1\">Works Under</label>\n              <select name=\"worksUnder\" className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(event) => this.getBoss(event)} >\n                <option selected disabled>Choose Employee</option>\n                {employees}\n              </select>\n            </div>\n            <button type=\"button\" className=\"button3\" onClick={() => this.addEmployee()} >Create Employee</button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default Create;","import React from 'react';\nimport axios from 'axios';\nimport './show.css';\nimport Nav from '../nav/nav';\n\n\nclass Show extends React.Component {\n  constructor(){\n      super();\n      this.state = {\n          selectedEmployee: \"\",\n          bosses: []\n      };\n  };\n\n  componentDidMount(){\n\n    //Get selected employee data and set to state\n    //---------------------------------------------\n    let requestID = this.props.match.params.id;\n\n    axios.get(\"/api/employee/\"+requestID)\n      .then(response =>{\n        let selectedEmployee = response.data.selectedEmployee[0];\n        console.log({selectedEmployee});\n        this.setState({ selectedEmployee });\n      })\n      .catch(err => console.log(err));\n  };\n\n  componentDidUpdate(){\n\n    // Check if there's any boss\n    //---------------------------------------------\n    if(this.state.selectedEmployee.work_under_id && this.state.bosses.length === 0){\n      this.getBosses(this.state.selectedEmployee.work_under_id);\n    };\n\n  };\n\n\n  getBosses(id){\n\n    // Get boss data and push it to array in state, then check if that boss has a boss, if yes then run this function again, if not then exit from the function\n    //---------------------------------------------\n    let param = \"\" + id\n\n    axios.get(\"/api/employee/\"+param)\n      .then(response =>{\n        let selectedEmployee = response.data.selectedEmployee[0];\n        let bosses = this.state.bosses;\n        bosses.push(selectedEmployee);\n        this.setState({ bosses });\n        if (selectedEmployee.work_under_id){\n          this.getBosses(selectedEmployee.work_under_id);\n        } else {\n          return;\n        };\n      })\n      .catch(err => console.log(err));\n      console.log(this.state);\n  };\n\n  render(){\n\n    // Update render html based on states\n    //---------------------------------------------\n    let name = this.state.selectedEmployee.firstname + \" \" + this.state.selectedEmployee.lastname\n    let phone = this.state.selectedEmployee.phone\n    let email = this.state.selectedEmployee.email\n    let image = this.state.selectedEmployee.image || \"https://i.pinimg.com/originals/19/b8/d6/19b8d6e9b13eef23ec9c746968bb88b1.jpg\";\n    let works_under;\n    if(this.state.bosses.length === 0){\n      works_under = \"Nil\";\n    } else {\n      works_under =this.state.bosses.map(x=>{\n        return  <span> <a href={`/show/${x.id}`}>{x.firstname}</a> >> </span>\n      });\n    };\n    //---------------------------------------------\n\n\n\n    return (\n      <div>\n\n          <Nav/>\n\n          <h1 className=\"title\">Employee:  {this.state.selectedEmployee.firstname}</h1>\n\n            <div className=\"card border-secondary mb-3\">\n              <img src={image} className=\"card-img-top profile-pic\" alt=\"user-profile\" />\n              <div className=\"card-body\">\n                <div className=\"card-header\"><h2>{name}</h2></div>\n                <ul className=\"list-group list-group-flush\">\n                  <li className=\"list-group-item list-group-item-action\">{phone}</li>\n                  <li className=\"list-group-item list-group-item-action\">{email}</li>\n                  <li className=\"list-group-item list-group-item-action\">Works Under: {works_under}</li>\n                  <li className=\"list-group-item list-group-item-action\"><button type=\"button\" className=\"button4\" ><a href={`/edit/${this.state.selectedEmployee.id}`}>Edit {this.state.selectedEmployee.firstname}</a></button></li>\n                </ul>\n              </div>\n            </div>\n\n\n      </div>\n    );\n  };\n};\n\nexport default Show;","import React from 'react';\nimport axios from 'axios';\nimport './edit.css';\nimport Nav from '../nav/nav';\nimport { Redirect } from 'react-router'\n\nclass Edit extends React.Component {\n\n  constructor(){\n      super();\n      this.state = {\n          employees: [],\n          foundSubordinate: false,\n          editEmployee: {\n            id: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            phone: \"\",\n            email: \"\",\n            work_under_id: \"\",\n            work_under_name: \"\"\n          },\n          editImage: {\n            id: \"\",\n            image: \"\"\n          },\n          redirectID: \"\",\n          redirect: false,\n          alert: \"\"\n      };\n  };\n\n\n  // Get employee data\n  //---------------------------------------------\n  componentDidMount(){\n\n    // Get employee data to be edited\n    let requestID = this.props.match.params.id;\n\n    axios.get(\"/api/employee/\"+requestID)\n      .then(response =>{\n        let editEmployee = response.data.selectedEmployee[0];\n        this.setState({ editEmployee });\n        let editImage = this.state.editImage;\n        editImage.id = response.data.selectedEmployee[0].id;\n        this.setState({ editImage });\n      })\n      .catch(err => console.log(err));\n\n\n    // Get employees data for selection options later\n    axios.get(\"/api/employees\")\n      .then(response =>{\n        let employees = response.data.employees;\n        console.log({employees});\n        this.setState({ employees });\n      })\n      .catch(err => console.log(err));\n\n  }\n\n\n\n  //Setting all user inputs into state\n  //---------------------------------------------\n  getFirstName(e){\n    let editEmployee = this.state.editEmployee;\n    editEmployee.firstname = e.target.value;\n    this.setState({ editEmployee });\n    console.log(this.state.editEmployee);\n  }\n\n  getLastName(e){\n    let editEmployee = this.state.editEmployee;\n    editEmployee.lastname = e.target.value;\n    this.setState({ editEmployee });\n    console.log(this.state.editEmployee);\n  }\n\n  getPhone(e){\n    let editEmployee = this.state.editEmployee;\n    editEmployee.phone = e.target.value;\n    this.setState({ editEmployee });\n    console.log(this.state.editEmployee);\n  }\n\n  getEmail(e){\n    let editEmployee = this.state.editEmployee;\n    editEmployee.email = e.target.value;\n    this.setState({ editEmployee });\n    console.log(this.state.editEmployee);\n  }\n\n  getBoss(e){\n    let editEmployee = this.state.editEmployee;\n    editEmployee.work_under_id = e.target.value;\n    editEmployee.work_under_name = e.target.selectedOptions[0].text;\n    this.setState({ editEmployee });\n    console.log(this.state.editEmployee);\n  }\n\n  getImage(e){\n    let editImage = this.state.editImage;\n    editImage.image = e.target.value;\n    this.setState({ editImage });\n  }\n\n//---------------------------------------------\n\n\n  // Update edits into database\n  //---------------------------------------------\n  editEmployee(){\n\n    let editEmployee = this.state.editEmployee;\n\n    // User input validation\n    if(editEmployee.firstname && editEmployee.lastname && editEmployee.phone && editEmployee.email){\n      if(editEmployee.email.includes(\"@\") && editEmployee.email.indexOf(\"@\") !== (editEmployee.email.length - 1)){\n        axios.post('/api/editemployee/', {\n            editEmployee\n          })\n          .then(response => {\n            // If editing is unsuccessful, alert user\n            if(response.data.name === \"error\"){\n              console.log(response.data.detail  );\n              this.setState({ alert: `Email: ${this.state.editEmployee.email} already exists` });\n              window.scrollTo(0,0);\n            } else {\n            // If editing is successful, redirect user to show page\n              let id = response.data.editedEmployee[0].id;\n              this.setState({ redirectID: id });\n              this.setState({ redirect: true });\n            };\n\n          })\n          .catch(err => {\n            console.log(err);\n          });\n      } else {\n        this.setState({ alert: `Please fill in a valid email` });\n        window.scrollTo(0,0);\n      }\n    } else {\n      this.setState({ alert: `Please fill in all the mandatory details` });\n      window.scrollTo(0,0);\n    }\n\n  }\n\n  editImage(){\n    let editImage = this.state.editImage;\n\n    axios.post('/api/editimage/', {\n        editImage\n      })\n      .then(response => {\n        // If editing is unsuccessful, alert user\n        if(response.data.name === \"error\"){\n          console.log(response.data.detail  );\n          this.setState({ alert: `Image upload unsuccessful` });\n          window.scrollTo(0,0);\n        } else {\n        // If editing is successful, redirect user back to edit page\n          this.setState({ redirect: true });\n        };\n\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }\n  //---------------------------------------------\n\n\n  // Redirecting after user added to database\n  //---------------------------------------------\n  renderRedirect(){\n    let id = \"\" + this.state.redirectID;\n    if (this.state.redirect && this.state.redirectID) {\n      return <Redirect to={\"/show/\" + id} />\n    } else if (this.state.redirect && !this.state.redirectID){\n      window.location.reload();\n    }\n  }\n  //---------------------------------------------\n\n\n  // Redirect back to show page\n  //---------------------------------------------\n  backToShow(){\n    let id = this.state.editEmployee.id;\n    this.setState({ redirectID: id });\n    this.setState({ redirect: true });\n  }\n  //---------------------------------------------\n\n\n  // Curating the employees array (make sure employee cannot work under self, or any subordinates under him in any hierarchy)\n  //---------------------------------------------\n  findSame(){\n    let array = this.state.employees;\n    for(let i=0; i < array.length; i++){\n      if(array[i].id === this.state.editEmployee.id){\n        console.log(\"found same\")\n        array.splice(i, 1);\n        this.setState({ employees: array })\n      } else {\n        if(array[i].work_under_id){\n          if(array[i].work_under_id === this.state.editEmployee.id){\n            console.log(\"im the boss of \" + array[i].firstname)\n            array.splice(i, 1);\n            this.setState({ employees: array })\n          } else {\n            this.findWorkForWho(array[i].id)\n            if(this.state.foundSubordinate){\n              array.splice(i, 1);\n              this.setState({ employees: array })\n              this.setState({ foundSubordinate: false});\n            };\n          };\n        };\n      };\n    };\n  };\n\n  findWorkForWho(id){\n    let requestID = \"\" + id;\n\n    axios.get(\"/api/employee/\"+requestID)\n      .then(response =>{\n        let employee = response.data.selectedEmployee[0];\n        if(!employee.work_under_id){\n          if(employee.id === this.state.editEmployee.id){\n            return;\n          }\n        } else {\n          if(employee.work_under_id === this.state.editEmployee.id){\n            this.setState({ foundSubordinate: true });\n          } else {\n            this.findWorkForWho(employee.work_under_id);\n          };\n        };\n      })\n      .catch(err => console.log(err));\n  }\n  //---------------------------------------------\n\n\n\n\n  render(){\n\n    // Plot employees on the html\n    let employees = this.state.employees.map(x =>{\n\n                      return  <option key={x.id} value={x.id} >{x.firstname} {x.lastname}</option>\n                    })\n\n\n    // Show alert then remove alert after 5 seconds\n    let alert = null;\n    if(this.state.alert){\n      alert = <div className=\"alert alert-danger text-center\" role=\"alert\">\n                {this.state.alert}\n              </div>\n      setTimeout(function() {\n        this.setState({ alert: \"\" });\n      }.bind(this),5000);\n    }\n\n\n    // Curate the employees array\n    this.findSame();\n\n    return (\n      <div>\n        <Nav />\n        {alert}\n        {this.renderRedirect()}\n        <div className=\"container\">\n          <h1 className=\"title\">Edit Employee: {this.state.editEmployee.firstname}</h1>\n          <div className=\"profile-pic2\">\n            <img src={this.state.editEmployee.image}  alt=\"user-profile\" />\n            <button className=\"button3 mt-3\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\n              Change Profile Picture\n            </button>\n          </div>\n\n          <div className=\"collapse\" id=\"collapseExample\">\n            <div className=\"card card-body\">\n              <div className=\"form-group\">\n                <input name=\"image\" type=\"text\" className=\"form-control\" placeholder=\"Place image link here\" onChange={(event) => this.getImage(event)} />\n              </div>\n              <button className=\"btn-sm btn-secondary\" onClick={() => this.editImage()} >Save</button>\n            </div>\n          </div>\n\n          <form className=\"mb-5 mt-5\">\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput1\">First Name *</label>\n              <input name=\"firstName\" type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" value={this.state.editEmployee.firstname} required onChange={(event) => this.getFirstName(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput2\">Last Name *</label>\n              <input name=\"lastName\" type=\"text\" className=\"form-control\" id=\"exampleFormControlInput2\" value={this.state.editEmployee.lastname} required onChange={(event) => this.getLastName(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput3\">Phone Number *<small id=\"emailHelp\" className=\"form-text text-muted\">(Up to 15 characters)</small></label>\n              <input name=\"phone\" type=\"text\" className=\"form-control\" id=\"exampleFormControlInput3\" value={this.state.editEmployee.phone} required onChange={(event) => this.getPhone(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlInput4\">Email Address *</label>\n              <input name=\"email\" type=\"email\" className=\"form-control\" id=\"exampleFormControlInput4\" value={this.state.editEmployee.email} required onChange={(event) => this.getEmail(event)} />\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlSelect1\">Works Under</label>\n              <select name=\"worksUnder\" className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={(event) => this.getBoss(event)} >\n                <option selected disabled>{this.state.editEmployee.work_under_name} </option>\n                {employees}\n                <option value=\"nobody\" >Nobody</option>\n              </select>\n            </div>\n            <button type=\"button\" className=\"btn btn-secondary mr-3\" onClick={() => this.backToShow()} >Back</button>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={() => this.editEmployee()} >Save</button>\n          </form>\n        </div>\n      </div>\n    );\n  };\n};\n\nexport default Edit;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Start from './start/start';\nimport Employees from './employees/employees';\nimport Create from './create/create';\nimport Show from './show/show';\nimport Edit from './edit/edit';\n\nconst Main = ()=>(\n  <main>\n    <Switch>\n\n      <Route exact path='/' component={Start} />\n      <Route exact path='/employees' component={Employees} />\n      <Route exact path='/create' component={Create} />\n      <Route exact path='/show/:id' component={Show} />\n      <Route exact path='/edit/:id' component={Edit} />\n\n    </Switch>\n  </main>\n\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Main from \"./components/main\";\n\n\nclass App extends React.Component {\n\n  render(){\n\n    return (\n      <div className=\"main\">\n\n        <Main />\n\n      </div>\n    );\n  };\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}